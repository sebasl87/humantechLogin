{"version":3,"sources":["webpack:///node_modules/@ionic/core/dist/esm/ion-route_4.entry.js"],"names":["Route","hostRef","url","ionRouteDataChanged","newValue","emit","oldValue","keys1","Object","keys","keys2","length","onUpdate","key","RouteRedirect","ionRouteRedirectChanged","ROUTER_INTENT_NONE","ROUTER_INTENT_FORWARD","ROUTER_INTENT_BACK","generatePath","segments","path","filter","s","join","chainToPath","chain","route","segment","param","params","slice","push","writePath","history","root","useHash","direction","state","queryString","parsePath","undefined","pushState","replaceState","removePrefix","prefix","i","readPath","loc","pathname","hash","removeQueryString","split","map","trim","printRoutes","routes","console","group","forEach","r","ids","id","debug","groupEnd","printRedirects","redirects","redirect","to","from","writeNavState","index","changed","outlet","searchNavNode","componentOnReady","setRouteId","result","element","markVisible","error","readNavState","node","getRouteId","waitUntilNavNode","document","body","Promise","resolve","window","addEventListener","once","QUERY","matches","querySelector","matchesRedirect","input","expected","routeRedirect","find","matchesIDs","len","Math","min","toLowerCase","matchesPath","inputPath","RouterSegments","matchesDefault","allparams","data","next","mergeParams","a","b","assign","routerIDsToChain","chains","match","maxMatches","plainIDs","score","routerPathToChain","matchedChain","computePriority","level","pow","shift","readRedirects","Array","children","el","tagName","readProp","readRoutes","flattenRouterTree","readRouteNodes","component","Error","componentProps","prop","hasAttribute","getAttribute","nodes","flattenNode","sub","Router","previousPath","busy","lastState","ionRouteWillChange","ionRouteDidChange","onRoutesChanged","onRedirectChanged","bind","historyDirection","getPath","writeNavStateRoot","ev","detail","register","processNextHandler","back","startsWith","URL","location","href","setPath","waitPromise","warn","safeWriteNavState","win","title","redirectFrom","lock","unlock","p","routeEvent","routeChangeEvent","redirectFromPath","redirectedFrom","routerLinkCss","RouterLink","routerDirection","onClick","mode","attrs","rel","target","color","style"],"mappings":"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","file":"54-es5.js","sourcesContent":["import { r as registerInstance, d as createEvent, e as getElement, h, H as Host } from './index-26ec602c.js';\nimport { b as getIonMode } from './ionic-global-1bf1fa84.js';\nimport { e as debounce } from './helpers-d8b49b57.js';\nimport { o as openURL, c as createColorClasses } from './theme-c2dc54d9.js';\n\nconst Route = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        /**\n         * Relative path that needs to match in order for this route to apply.\n         *\n         * Accepts paths similar to expressjs so that you can define parameters\n         * in the url /foo/:bar where bar would be available in incoming props.\n         */\n        this.url = '';\n        this.ionRouteDataChanged = createEvent(this, \"ionRouteDataChanged\", 7);\n    }\n    onUpdate(newValue) {\n        this.ionRouteDataChanged.emit(newValue);\n    }\n    onComponentProps(newValue, oldValue) {\n        if (newValue === oldValue) {\n            return;\n        }\n        const keys1 = newValue ? Object.keys(newValue) : [];\n        const keys2 = oldValue ? Object.keys(oldValue) : [];\n        if (keys1.length !== keys2.length) {\n            this.onUpdate(newValue);\n            return;\n        }\n        for (const key of keys1) {\n            if (newValue[key] !== oldValue[key]) {\n                this.onUpdate(newValue);\n                return;\n            }\n        }\n    }\n    connectedCallback() {\n        this.ionRouteDataChanged.emit();\n    }\n    static get watchers() { return {\n        \"url\": [\"onUpdate\"],\n        \"component\": [\"onUpdate\"],\n        \"componentProps\": [\"onComponentProps\"]\n    }; }\n};\n\nconst RouteRedirect = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.ionRouteRedirectChanged = createEvent(this, \"ionRouteRedirectChanged\", 7);\n    }\n    propDidChange() {\n        this.ionRouteRedirectChanged.emit();\n    }\n    connectedCallback() {\n        this.ionRouteRedirectChanged.emit();\n    }\n    static get watchers() { return {\n        \"from\": [\"propDidChange\"],\n        \"to\": [\"propDidChange\"]\n    }; }\n};\n\nconst ROUTER_INTENT_NONE = 'root';\nconst ROUTER_INTENT_FORWARD = 'forward';\nconst ROUTER_INTENT_BACK = 'back';\n\nconst generatePath = (segments) => {\n    const path = segments\n        .filter(s => s.length > 0)\n        .join('/');\n    return '/' + path;\n};\nconst chainToPath = (chain) => {\n    const path = [];\n    for (const route of chain) {\n        for (const segment of route.path) {\n            if (segment[0] === ':') {\n                const param = route.params && route.params[segment.slice(1)];\n                if (!param) {\n                    return null;\n                }\n                path.push(param);\n            }\n            else if (segment !== '') {\n                path.push(segment);\n            }\n        }\n    }\n    return path;\n};\nconst writePath = (history, root, useHash, path, direction, state, queryString) => {\n    let url = generatePath([\n        ...parsePath(root),\n        ...path\n    ]);\n    if (useHash) {\n        url = '#' + url;\n    }\n    if (queryString !== undefined) {\n        url = url + '?' + queryString;\n    }\n    if (direction === ROUTER_INTENT_FORWARD) {\n        history.pushState(state, '', url);\n    }\n    else {\n        history.replaceState(state, '', url);\n    }\n};\nconst removePrefix = (prefix, path) => {\n    if (prefix.length > path.length) {\n        return null;\n    }\n    if (prefix.length <= 1 && prefix[0] === '') {\n        return path;\n    }\n    for (let i = 0; i < prefix.length; i++) {\n        if (prefix[i].length > 0 && prefix[i] !== path[i]) {\n            return null;\n        }\n    }\n    if (path.length === prefix.length) {\n        return [''];\n    }\n    return path.slice(prefix.length);\n};\nconst readPath = (loc, root, useHash) => {\n    let pathname = loc.pathname;\n    if (useHash) {\n        const hash = loc.hash;\n        pathname = (hash[0] === '#')\n            ? hash.slice(1)\n            : '';\n    }\n    const prefix = parsePath(root);\n    const path = parsePath(pathname);\n    return removePrefix(prefix, path);\n};\nconst parsePath = (path) => {\n    if (path == null) {\n        return [''];\n    }\n    const removeQueryString = path.split('?')[0];\n    const segments = removeQueryString.split('/')\n        .map(s => s.trim())\n        .filter(s => s.length > 0);\n    if (segments.length === 0) {\n        return [''];\n    }\n    else {\n        return segments;\n    }\n};\n\nconst printRoutes = (routes) => {\n    console.group(`[ion-core] ROUTES[${routes.length}]`);\n    for (const chain of routes) {\n        const path = [];\n        chain.forEach(r => path.push(...r.path));\n        const ids = chain.map(r => r.id);\n        console.debug(`%c ${generatePath(path)}`, 'font-weight: bold; padding-left: 20px', '=>\\t', `(${ids.join(', ')})`);\n    }\n    console.groupEnd();\n};\nconst printRedirects = (redirects) => {\n    console.group(`[ion-core] REDIRECTS[${redirects.length}]`);\n    for (const redirect of redirects) {\n        if (redirect.to) {\n            console.debug('FROM: ', `$c ${generatePath(redirect.from)}`, 'font-weight: bold', ' TO: ', `$c ${generatePath(redirect.to)}`, 'font-weight: bold');\n        }\n    }\n    console.groupEnd();\n};\n\nconst writeNavState = async (root, chain, direction, index, changed = false) => {\n    try {\n        // find next navigation outlet in the DOM\n        const outlet = searchNavNode(root);\n        // make sure we can continue interacting the DOM, otherwise abort\n        if (index >= chain.length || !outlet) {\n            return changed;\n        }\n        await outlet.componentOnReady();\n        const route = chain[index];\n        const result = await outlet.setRouteId(route.id, route.params, direction);\n        // if the outlet changed the page, reset navigation to neutral (no direction)\n        // this means nested outlets will not animate\n        if (result.changed) {\n            direction = ROUTER_INTENT_NONE;\n            changed = true;\n        }\n        // recursively set nested outlets\n        changed = await writeNavState(result.element, chain, direction, index + 1, changed);\n        // once all nested outlets are visible let's make the parent visible too,\n        // using markVisible prevents flickering\n        if (result.markVisible) {\n            await result.markVisible();\n        }\n        return changed;\n    }\n    catch (e) {\n        console.error(e);\n        return false;\n    }\n};\nconst readNavState = async (root) => {\n    const ids = [];\n    let outlet;\n    let node = root;\n    // tslint:disable-next-line:no-constant-condition\n    while (true) {\n        outlet = searchNavNode(node);\n        if (outlet) {\n            const id = await outlet.getRouteId();\n            if (id) {\n                node = id.element;\n                id.element = undefined;\n                ids.push(id);\n            }\n            else {\n                break;\n            }\n        }\n        else {\n            break;\n        }\n    }\n    return { ids, outlet };\n};\nconst waitUntilNavNode = () => {\n    if (searchNavNode(document.body)) {\n        return Promise.resolve();\n    }\n    return new Promise(resolve => {\n        window.addEventListener('ionNavWillLoad', resolve, { once: true });\n    });\n};\nconst QUERY = ':not([no-router]) ion-nav, :not([no-router]) ion-tabs, :not([no-router]) ion-router-outlet';\nconst searchNavNode = (root) => {\n    if (!root) {\n        return undefined;\n    }\n    if (root.matches(QUERY)) {\n        return root;\n    }\n    const outlet = root.querySelector(QUERY);\n    return outlet ? outlet : undefined;\n};\n\nconst matchesRedirect = (input, route) => {\n    const { from, to } = route;\n    if (to === undefined) {\n        return false;\n    }\n    if (from.length > input.length) {\n        return false;\n    }\n    for (let i = 0; i < from.length; i++) {\n        const expected = from[i];\n        if (expected === '*') {\n            return true;\n        }\n        if (expected !== input[i]) {\n            return false;\n        }\n    }\n    return from.length === input.length;\n};\nconst routeRedirect = (path, routes) => {\n    return routes.find(route => matchesRedirect(path, route));\n};\nconst matchesIDs = (ids, chain) => {\n    const len = Math.min(ids.length, chain.length);\n    let i = 0;\n    for (; i < len; i++) {\n        if (ids[i].toLowerCase() !== chain[i].id) {\n            break;\n        }\n    }\n    return i;\n};\nconst matchesPath = (inputPath, chain) => {\n    const segments = new RouterSegments(inputPath);\n    let matchesDefault = false;\n    let allparams;\n    for (let i = 0; i < chain.length; i++) {\n        const path = chain[i].path;\n        if (path[0] === '') {\n            matchesDefault = true;\n        }\n        else {\n            for (const segment of path) {\n                const data = segments.next();\n                // data param\n                if (segment[0] === ':') {\n                    if (data === '') {\n                        return null;\n                    }\n                    allparams = allparams || [];\n                    const params = allparams[i] || (allparams[i] = {});\n                    params[segment.slice(1)] = data;\n                }\n                else if (data !== segment) {\n                    return null;\n                }\n            }\n            matchesDefault = false;\n        }\n    }\n    const matches = (matchesDefault)\n        ? matchesDefault === (segments.next() === '')\n        : true;\n    if (!matches) {\n        return null;\n    }\n    if (allparams) {\n        return chain.map((route, i) => ({\n            id: route.id,\n            path: route.path,\n            params: mergeParams(route.params, allparams[i])\n        }));\n    }\n    return chain;\n};\nconst mergeParams = (a, b) => {\n    if (!a && b) {\n        return b;\n    }\n    else if (a && !b) {\n        return a;\n    }\n    else if (a && b) {\n        return Object.assign(Object.assign({}, a), b);\n    }\n    return undefined;\n};\nconst routerIDsToChain = (ids, chains) => {\n    let match = null;\n    let maxMatches = 0;\n    const plainIDs = ids.map(i => i.id);\n    for (const chain of chains) {\n        const score = matchesIDs(plainIDs, chain);\n        if (score > maxMatches) {\n            match = chain;\n            maxMatches = score;\n        }\n    }\n    if (match) {\n        return match.map((route, i) => ({\n            id: route.id,\n            path: route.path,\n            params: mergeParams(route.params, ids[i] && ids[i].params)\n        }));\n    }\n    return null;\n};\nconst routerPathToChain = (path, chains) => {\n    let match = null;\n    let matches = 0;\n    for (const chain of chains) {\n        const matchedChain = matchesPath(path, chain);\n        if (matchedChain !== null) {\n            const score = computePriority(matchedChain);\n            if (score > matches) {\n                matches = score;\n                match = matchedChain;\n            }\n        }\n    }\n    return match;\n};\nconst computePriority = (chain) => {\n    let score = 1;\n    let level = 1;\n    for (const route of chain) {\n        for (const path of route.path) {\n            if (path[0] === ':') {\n                score += Math.pow(1, level);\n            }\n            else if (path !== '') {\n                score += Math.pow(2, level);\n            }\n            level++;\n        }\n    }\n    return score;\n};\nclass RouterSegments {\n    constructor(path) {\n        this.path = path.slice();\n    }\n    next() {\n        if (this.path.length > 0) {\n            return this.path.shift();\n        }\n        return '';\n    }\n}\n\nconst readRedirects = (root) => {\n    return Array.from(root.children)\n        .filter(el => el.tagName === 'ION-ROUTE-REDIRECT')\n        .map(el => {\n        const to = readProp(el, 'to');\n        return {\n            from: parsePath(readProp(el, 'from')),\n            to: to == null ? undefined : parsePath(to),\n        };\n    });\n};\nconst readRoutes = (root) => {\n    return flattenRouterTree(readRouteNodes(root));\n};\nconst readRouteNodes = (root, node = root) => {\n    return Array.from(node.children)\n        .filter(el => el.tagName === 'ION-ROUTE' && el.component)\n        .map(el => {\n        const component = readProp(el, 'component');\n        if (component == null) {\n            throw new Error('component missing in ion-route');\n        }\n        return {\n            path: parsePath(readProp(el, 'url')),\n            id: component.toLowerCase(),\n            params: el.componentProps,\n            children: readRouteNodes(root, el)\n        };\n    });\n};\nconst readProp = (el, prop) => {\n    if (prop in el) {\n        return el[prop];\n    }\n    if (el.hasAttribute(prop)) {\n        return el.getAttribute(prop);\n    }\n    return null;\n};\nconst flattenRouterTree = (nodes) => {\n    const routes = [];\n    for (const node of nodes) {\n        flattenNode([], routes, node);\n    }\n    return routes;\n};\nconst flattenNode = (chain, routes, node) => {\n    const s = chain.slice();\n    s.push({\n        id: node.id,\n        path: node.path,\n        params: node.params\n    });\n    if (node.children.length === 0) {\n        routes.push(s);\n        return;\n    }\n    for (const sub of node.children) {\n        flattenNode(s, routes, sub);\n    }\n};\n\nconst Router = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.previousPath = null;\n        this.busy = false;\n        this.state = 0;\n        this.lastState = 0;\n        /**\n         * By default `ion-router` will match the routes at the root path (\"/\").\n         * That can be changed when\n         *\n         */\n        this.root = '/';\n        /**\n         * The router can work in two \"modes\":\n         * - With hash: `/index.html#/path/to/page`\n         * - Without hash: `/path/to/page`\n         *\n         * Using one or another might depend in the requirements of your app and/or where it's deployed.\n         *\n         * Usually \"hash-less\" navigation works better for SEO and it's more user friendly too, but it might\n         * requires additional server-side configuration in order to properly work.\n         *\n         * On the otherside hash-navigation is much easier to deploy, it even works over the file protocol.\n         *\n         * By default, this property is `true`, change to `false` to allow hash-less URLs.\n         */\n        this.useHash = true;\n        this.ionRouteWillChange = createEvent(this, \"ionRouteWillChange\", 7);\n        this.ionRouteDidChange = createEvent(this, \"ionRouteDidChange\", 7);\n    }\n    async componentWillLoad() {\n        console.debug('[ion-router] router will load');\n        await waitUntilNavNode();\n        console.debug('[ion-router] found nav');\n        await this.onRoutesChanged();\n    }\n    componentDidLoad() {\n        window.addEventListener('ionRouteRedirectChanged', debounce(this.onRedirectChanged.bind(this), 10));\n        window.addEventListener('ionRouteDataChanged', debounce(this.onRoutesChanged.bind(this), 100));\n    }\n    onPopState() {\n        const direction = this.historyDirection();\n        const path = this.getPath();\n        console.debug('[ion-router] URL changed -> update nav', path, direction);\n        return this.writeNavStateRoot(path, direction);\n    }\n    onBackButton(ev) {\n        ev.detail.register(0, processNextHandler => {\n            this.back();\n            processNextHandler();\n        });\n    }\n    /**\n     * Navigate to the specified URL.\n     *\n     * @param url The url to navigate to.\n     * @param direction The direction of the animation. Defaults to `\"forward\"`.\n     */\n    push(url, direction = 'forward') {\n        if (url.startsWith('.')) {\n            url = (new URL(url, window.location.href)).pathname;\n        }\n        console.debug('[ion-router] URL pushed -> updating nav', url, direction);\n        const path = parsePath(url);\n        const queryString = url.split('?')[1];\n        this.setPath(path, direction, queryString);\n        return this.writeNavStateRoot(path, direction);\n    }\n    /**\n     * Go back to previous page in the window.history.\n     */\n    back() {\n        window.history.back();\n        return Promise.resolve(this.waitPromise);\n    }\n    /** @internal */\n    async printDebug() {\n        console.debug('CURRENT PATH', this.getPath());\n        console.debug('PREVIOUS PATH', this.previousPath);\n        printRoutes(readRoutes(this.el));\n        printRedirects(readRedirects(this.el));\n    }\n    /** @internal */\n    async navChanged(direction) {\n        if (this.busy) {\n            console.warn('[ion-router] router is busy, navChanged was cancelled');\n            return false;\n        }\n        const { ids, outlet } = await readNavState(window.document.body);\n        const routes = readRoutes(this.el);\n        const chain = routerIDsToChain(ids, routes);\n        if (!chain) {\n            console.warn('[ion-router] no matching URL for ', ids.map(i => i.id));\n            return false;\n        }\n        const path = chainToPath(chain);\n        if (!path) {\n            console.warn('[ion-router] router could not match path because some required param is missing');\n            return false;\n        }\n        console.debug('[ion-router] nav changed -> update URL', ids, path);\n        this.setPath(path, direction);\n        await this.safeWriteNavState(outlet, chain, ROUTER_INTENT_NONE, path, null, ids.length);\n        return true;\n    }\n    onRedirectChanged() {\n        const path = this.getPath();\n        if (path && routeRedirect(path, readRedirects(this.el))) {\n            this.writeNavStateRoot(path, ROUTER_INTENT_NONE);\n        }\n    }\n    onRoutesChanged() {\n        return this.writeNavStateRoot(this.getPath(), ROUTER_INTENT_NONE);\n    }\n    historyDirection() {\n        const win = window;\n        if (win.history.state === null) {\n            this.state++;\n            win.history.replaceState(this.state, win.document.title, win.document.location && win.document.location.href);\n        }\n        const state = win.history.state;\n        const lastState = this.lastState;\n        this.lastState = state;\n        if (state > lastState) {\n            return ROUTER_INTENT_FORWARD;\n        }\n        else if (state < lastState) {\n            return ROUTER_INTENT_BACK;\n        }\n        else {\n            return ROUTER_INTENT_NONE;\n        }\n    }\n    async writeNavStateRoot(path, direction) {\n        if (!path) {\n            console.error('[ion-router] URL is not part of the routing set');\n            return false;\n        }\n        // lookup redirect rule\n        const redirects = readRedirects(this.el);\n        const redirect = routeRedirect(path, redirects);\n        let redirectFrom = null;\n        if (redirect) {\n            this.setPath(redirect.to, direction);\n            redirectFrom = redirect.from;\n            path = redirect.to;\n        }\n        // lookup route chain\n        const routes = readRoutes(this.el);\n        const chain = routerPathToChain(path, routes);\n        if (!chain) {\n            console.error('[ion-router] the path does not match any route');\n            return false;\n        }\n        // write DOM give\n        return this.safeWriteNavState(document.body, chain, direction, path, redirectFrom);\n    }\n    async safeWriteNavState(node, chain, direction, path, redirectFrom, index = 0) {\n        const unlock = await this.lock();\n        let changed = false;\n        try {\n            changed = await this.writeNavState(node, chain, direction, path, redirectFrom, index);\n        }\n        catch (e) {\n            console.error(e);\n        }\n        unlock();\n        return changed;\n    }\n    async lock() {\n        const p = this.waitPromise;\n        let resolve;\n        this.waitPromise = new Promise(r => resolve = r);\n        if (p !== undefined) {\n            await p;\n        }\n        return resolve;\n    }\n    async writeNavState(node, chain, direction, path, redirectFrom, index = 0) {\n        if (this.busy) {\n            console.warn('[ion-router] router is busy, transition was cancelled');\n            return false;\n        }\n        this.busy = true;\n        // generate route event and emit will change\n        const routeEvent = this.routeChangeEvent(path, redirectFrom);\n        if (routeEvent) {\n            this.ionRouteWillChange.emit(routeEvent);\n        }\n        const changed = await writeNavState(node, chain, direction, index);\n        this.busy = false;\n        if (changed) {\n            console.debug('[ion-router] route changed', path);\n        }\n        // emit did change\n        if (routeEvent) {\n            this.ionRouteDidChange.emit(routeEvent);\n        }\n        return changed;\n    }\n    setPath(path, direction, queryString) {\n        this.state++;\n        writePath(window.history, this.root, this.useHash, path, direction, this.state, queryString);\n    }\n    getPath() {\n        return readPath(window.location, this.root, this.useHash);\n    }\n    routeChangeEvent(path, redirectFromPath) {\n        const from = this.previousPath;\n        const to = generatePath(path);\n        this.previousPath = to;\n        if (to === from) {\n            return null;\n        }\n        const redirectedFrom = redirectFromPath ? generatePath(redirectFromPath) : null;\n        return {\n            from,\n            redirectedFrom,\n            to,\n        };\n    }\n    get el() { return getElement(this); }\n};\n\nconst routerLinkCss = \":host{--background:transparent;--color:var(--ion-color-primary, #3880ff);background:var(--background);color:var(--color)}:host(.ion-color){color:var(--ion-color-base)}a{font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit}\";\n\nconst RouterLink = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        /**\n         * When using a router, it specifies the transition direction when navigating to\n         * another page using `href`.\n         */\n        this.routerDirection = 'forward';\n        this.onClick = (ev) => {\n            openURL(this.href, ev, this.routerDirection);\n        };\n    }\n    render() {\n        const mode = getIonMode(this);\n        const attrs = {\n            href: this.href,\n            rel: this.rel,\n            target: this.target\n        };\n        return (h(Host, { onClick: this.onClick, class: Object.assign(Object.assign({}, createColorClasses(this.color)), { [mode]: true, 'ion-activatable': true }) }, h(\"a\", Object.assign({}, attrs), h(\"slot\", null))));\n    }\n};\nRouterLink.style = routerLinkCss;\n\nexport { Route as ion_route, RouteRedirect as ion_route_redirect, Router as ion_router, RouterLink as ion_router_link };\n"]}